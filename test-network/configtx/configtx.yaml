# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

---
################################################################################
#
#   Section: Organizations
#
# - 이 섹션은 나중에 구성에서 참조될 다양한 조직 ID를 정의합니다.
#
################################################################################
Organizations:

    # SampleOrg는 sampleconfig를 사용하여 MSP를 정의합니다. 
    # 프로덕션 환경에서는 절대 사용해서는 안 되지만 다른 정의의 템플릿으로 사용할 수 있습니다.
    - &OrdererOrg
        # DefaultOrg는 fabric.git 개발 환경의 sampleconfig에서 사용되는 조직을 정의합니다.
        Name: OrdererOrg

    # MSP 정의를 로드할 ID
        ID: OrdererMSP

        # MSPDir은 MSP 구성을 포함하는 파일 시스템 경로입니다.
        MSPDir: ../organizations/ordererOrganizations/example.com/msp

        # 정책은 구성 트리의 이 수준에서 정책 집합을 정의합니다. 
        # 조직 정책의 경우 표준 경로는 일반적으로 다음과 같습니다.
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('OrdererMSP.member')"
            Writers:
                Type: Signature
                Rule: "OR('OrdererMSP.member')"
            Admins:
                Type: Signature
                Rule: "OR('OrdererMSP.admin')"

        OrdererEndpoints:
            - orderer.example.com:7050

    - &Org1
        # DefaultOrg는 fabric.git 개발 환경의 sampleconfig에서 사용되는 조직을 정의합니다.
        Name: Org1MSP

        # MSP 정의를 로드할 ID
        ID: Org1MSP

        MSPDir: ../organizations/peerOrganizations/org1.example.com/msp

        # 정책은 구성 트리의 이 수준에서 정책 집합을 정의합니다. 
        # 조직 정책의 경우 표준 경로는 일반적으로 다음과 같습니다.
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('Org1MSP.admin', 'Org1MSP.peer', 'Org1MSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('Org1MSP.admin', 'Org1MSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('Org1MSP.admin')"
            Endorsement:
                Type: Signature
                Rule: "OR('Org1MSP.peer')"
        AnchorPeers:
            # AnchorPeers는 조직 간 가십 커뮤니케이션에 사용할 수 있는 피어의 위치를 정의합니다.
            # 이 값은 Application 섹션 컨텍스트의 genesis 블록에서만 인코딩됩니다.
            - Host: peer0.org1.example.com
              Port: 7051

    - &Org2
        # DefaultOrg는 fabric.git 개발 환경의 sampleconfig에서 사용되는 조직을 정의합니다.
        Name: Org2MSP

        # MSP 정의를 로드할 ID
        ID: Org2MSP

        MSPDir: ../organizations/peerOrganizations/org2.example.com/msp

        # 정책은 구성 트리의 이 수준에서 정책 집합을 정의합니다. 
        # 조직 정책의 경우 표준 경로는 일반적으로 다음과 같습니다.
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('Org2MSP.admin', 'Org2MSP.peer', 'Org2MSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('Org2MSP.admin', 'Org2MSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('Org2MSP.admin')"
            Endorsement:
                Type: Signature
                Rule: "OR('Org2MSP.peer')"
        AnchorPeers:
            # AnchorPeers는 조직 간 가십 커뮤니케이션에 사용할 수 있는 피어의 위치를 정의합니다.
            # 이 값은 Application 섹션 컨텍스트의 genesis 블록에서만 인코딩됩니다.
            - Host: peer0.org2.example.com
              Port: 9051


################################################################################
#
#   SECTION: Capabilities
#
#   - 이 섹션은 패브릭 네트워크의 기능을 정의합니다.
#   이것은 v1.1.0의 새로운 개념이며 v1.0.x 피어 및 주문자가 있는 
#   혼합 네트워크에서 활용해서는 안 됩니다.
#   기능은 바이너리가 패브릭 네트워크에 안전하게 참여하기 위해 
#   패브릭 바이너리에 있어야 하는 기능을 정의합니다.
#   예를 들어, 새로운 MSP 유형이 추가되면 최신 바이너리는 이 유형의 서명을 인식하고 검증할 수 있지만
#   이 지원이 없는 이전 바이너리는 해당 트랜잭션을 검증할 수 없습니다.
#   이로 인해 다른 세계 상태를 갖는 다른 버전의 패브릭 바이너리가 생길 수 있습니다.
#   대신 채널에 대한 기능을 정의하면 이 기능이 없는 바이너리에 
#   업그레이드될 때까지 트랜잭션 처리를 중단해야 함을 알립니다.
#   v1.0.x의 경우 기능이 정의된 경우(모든 기능이 꺼진 맵 포함) v1.0.x 피어가 의도적으로 충돌합니다.
#
################################################################################
Capabilities:
    # 채널 기능은 orderer와 peer 모두에 적용되며 둘 다에서 지원되어야 합니다. 
    # 기능을 요구하려면 기능 값을 true로 설정하십시오.
    Channel: &ChannelCapabilities
        # V2_0 기능은 주문자와 피어가 v2.0 채널 기능에 따라 작동하도록 합니다.
        # 이전 릴리스의 주문자와 피어는 호환되지 않는 방식으로 작동하므로 v2.0 기능에서 채널에 참여할 수 없습니다.
        # V2.0 채널 기능을 활성화하기 전에 채널의 모든 주문자 및 피어가 v2.0.0 이상인지 확인하십시오.
        # 해당 채널에 참여할 수 있는 피어와 오더러의 버전은 2.0이거나 그 이후 버전이여야 함.
        V2_0: true

    # 주문자 기능은 주문자에게만 적용되며 이전 릴리스 피어와 함께 안전하게 사용할 수 있습니다.
    # 기능을 요구하려면 기능 값을 true로 설정하십시오.
    Orderer: &OrdererCapabilities
        # V2_0 주문자 기능은 주문자가 v2.0 주문자 기능에 따라 작동하도록 합니다.
        # 이전 릴리스의 주문자는 호환되지 않는 방식으로 작동하므로 v2.0 주문자 기능의 채널에 참여할 수 없습니다.
        # V2.0 주문자 기능을 활성화하기 전에 채널의 모든 주문자가 v2.0.0 이상인지 확인하십시오.
        # 해당 채널에 참여할 수 있는 오더러의 버전은 2.0이거나 그 이후 버전이여야 함.
        V2_0: true

    # 응용 프로그램 기능은 피어 네트워크에만 적용되며 이전 릴리스 주문자와 함께 안전하게 사용할 수 있습니다.
    # 기능을 요구하려면 기능 값을 true로 설정하십시오.
    Application: &ApplicationCapabilities
        # V2_0 애플리케이션 기능은 피어가 v2.0 애플리케이션 기능에 따라 작동하도록 합니다.
        # 이전 릴리스의 피어는 호환되지 않는 방식으로 작동하므로 v2.0 애플리케이션 기능에서 채널에 참여할 수 없습니다.
        # V2.0 애플리케이션 기능을 활성화하기 전에 채널의 모든 피어가 v2.0.0 이상인지 확인하십시오.
        # 해당 채널에 참여할 수 있는 피어의 버전은 2.0이거나 그 이후 버전이여의야 함.
        V2_0: true

################################################################################
#
#   SECTION: Application
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for application related parameters
#
################################################################################
Application: &ApplicationDefaults

    # Organizations is the list of orgs which are defined as participants on
    # the application side of the network
    Organizations:

    # Policies defines the set of policies at this level of the config tree
    # For Application policies, their canonical path is
    #   /Channel/Application/<PolicyName>
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        LifecycleEndorsement:
            Type: ImplicitMeta
            Rule: "MAJORITY Endorsement"
        Endorsement:
            Type: ImplicitMeta
            Rule: "MAJORITY Endorsement"

    Capabilities:
        <<: *ApplicationCapabilities
################################################################################
#
#   SECTION: Orderer
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for orderer related parameters
#
################################################################################
Orderer: &OrdererDefaults

    # Orderer Type: The orderer implementation to start
    OrdererType: etcdraft
    
    # Addresses used to be the list of orderer addresses that clients and peers
    # could connect to.  However, this does not allow clients to associate orderer
    # addresses and orderer organizations which can be useful for things such
    # as TLS validation.  The preferred way to specify orderer addresses is now
    # to include the OrdererEndpoints item in your org definition
    Addresses:
        - orderer.example.com:7050

    EtcdRaft:
        Consenters:
        - Host: orderer.example.com
          Port: 7050
          ClientTLSCert: ../organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt
          ServerTLSCert: ../organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt

    # Batch Timeout: The amount of time to wait before creating a batch
    BatchTimeout: 2s

    # Batch Size: Controls the number of messages batched into a block
    BatchSize:

        # Max Message Count: The maximum number of messages to permit in a batch
        MaxMessageCount: 10

        # Absolute Max Bytes: The absolute maximum number of bytes allowed for
        # the serialized messages in a batch.
        AbsoluteMaxBytes: 99 MB

        # Preferred Max Bytes: The preferred maximum number of bytes allowed for
        # the serialized messages in a batch. A message larger than the preferred
        # max bytes will result in a batch larger than preferred max bytes.
        PreferredMaxBytes: 512 KB

    # Organizations is the list of orgs which are defined as participants on
    # the orderer side of the network
    Organizations:

    # Policies defines the set of policies at this level of the config tree
    # For Orderer policies, their canonical path is
    #   /Channel/Orderer/<PolicyName>
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        # BlockValidation specifies what signatures must be included in the block
        # from the orderer for the peer to validate it.
        BlockValidation:
            Type: ImplicitMeta
            Rule: "ANY Writers"

################################################################################
#
#   CHANNEL
#
#   This section defines the values to encode into a config transaction or
#   genesis block for channel related parameters.
#
################################################################################
Channel: &ChannelDefaults
    # Policies defines the set of policies at this level of the config tree
    # For Channel policies, their canonical path is
    #   /Channel/<PolicyName>
    Policies:
        # Who may invoke the 'Deliver' API
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        # Who may invoke the 'Broadcast' API
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        # By default, who may modify elements at this config level
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"

    # Capabilities describes the channel level capabilities, see the
    # dedicated Capabilities section elsewhere in this file for a full
    # description
    Capabilities:
        <<: *ChannelCapabilities

################################################################################
#
#   Profile
#
#   - Different configuration profiles may be encoded here to be specified
#   as parameters to the configtxgen tool
#
################################################################################
Profiles:

    TwoOrgsOrdererGenesis:
        <<: *ChannelDefaults
        Orderer:
            <<: *OrdererDefaults
            Organizations:
                - *OrdererOrg
            Capabilities:
                <<: *OrdererCapabilities
        Consortiums:
            SampleConsortium:
                Organizations:
                    - *Org1
                    - *Org2
    TwoOrgsChannel:
        Consortium: SampleConsortium
        <<: *ChannelDefaults
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *Org1
                - *Org2
            Capabilities:
                <<: *ApplicationCapabilities
